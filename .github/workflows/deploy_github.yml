name: Deploy to GitHub Releases

on:
  push:
    tags:
      - '*'

env:
  PYINSTALLER_COMPILE_BOOTLOADER: 1

jobs:
  build:
    name: Create Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10"]
        os: [macos-latest, windows-latest]
    steps:
    - name: Set env
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@main
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install .
    - name: Build windows executable
      if: runner.os == 'windows'
      working-directory: ./build-recipes
      run: |
        pip install -r win_build_requirements.txt
        pyinstaller -y --log-level=WARN win_PyJibe.spec
        # Run the binary (the most simple test)
        dist\\PyJibe\\PyJibe.exe --version
        python win_make_iss.py
        ISCC.exe /Q win_pyjibe.iss
    - name: Build macOS app
      if: runner.os == 'macOS'
      working-directory: ./build-recipes
      run: |
        bash ./macos_build_app.sh PyJibe ${{ env.RELEASE_VERSION }}
    - name: Release Assets
      uses: softprops/action-gh-release@v1
      with:
        name: PyJibe ${{ env.RELEASE_VERSION }}
        draft: true
        prerelease: false
        body: |
            ![](https://img.shields.io/github/downloads/AFM-analysis/PyJibe/${{ env.RELEASE_VERSION }}/total.svg)

            For signed installers, please read the [Code Signing Policy](https://pyjibe.readthedocs.io/en/stable/sec_code_signing.html).
        files: |
          ./build-recipes/dist/*.dmg
          ./build-recipes/dist/*.pkg
          ./build-recipes/Output/*.exe
